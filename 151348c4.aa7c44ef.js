(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{182:function(e,r,t){"use strict";t.d(r,"a",(function(){return u})),t.d(r,"b",(function(){return f}));var n=t(0),a=t.n(n);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),m=function(e){var r=a.a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=m(e.components);return a.a.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=a.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=m(t),b=n,f=u["".concat(p,".").concat(b)]||u[b]||l[b]||o;return t?a.a.createElement(f,c(c({ref:r},s),{},{components:t})):a.a.createElement(f,c({ref:r},s))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,p=new Array(o);p[0]=b;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,p[1]=c;for(var s=2;s<o;s++)p[s]=t[s];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},58:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return p})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return i})),t.d(r,"default",(function(){return m}));var n=t(2),a=t(6),o=(t(0),t(182)),p={id:"map-from",title:"MapFrom",sidebar_label:"MapFrom"},c={unversionedId:"usages/mapping-configuration/for-member/map-from",id:"usages/mapping-configuration/for-member/map-from",isDocsHomePage:!1,title:"MapFrom",description:"Let's take a look at the following snippet",source:"@site/docs/usages/mapping-configuration/for-member/map-from.md",slug:"/usages/mapping-configuration/for-member/map-from",permalink:"/docs/next/usages/mapping-configuration/for-member/map-from",editUrl:"https://github.com/nartc/mapper/edit/master/automapper-docusaurus/docs/usages/mapping-configuration/for-member/map-from.md",version:"current",sidebar_label:"MapFrom",sidebar:"docs",previous:{title:"ForMember Basic",permalink:"/docs/next/usages/mapping-configuration/for-member/basic"},next:{title:"Condition",permalink:"/docs/next/usages/mapping-configuration/for-member/condition"}},i=[],s={rightToc:i};function m(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,t,{components:r,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Let's take a look at the following snippet"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"Mapper.createMap(User, UserVm)\n  .forMember(\n    dest => dest.fullName,\n    mapFrom(src => src.firstName + ' ' + src.lastName)\n  )\n  .forMember(\n    dest => dest.isAdult,\n    mapFrom(src => src.age >= 18)\n  );\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"mapFrom()")," takes in a callback that receives the ",Object(o.b)("inlineCode",{parentName:"p"},"source")," and needs to return a value with a ",Object(o.b)("inlineCode",{parentName:"p"},"type")," that matches ",Object(o.b)("inlineCode",{parentName:"p"},"dest => dest.<some_member>"),".\n",Object(o.b)("strong",{parentName:"p"},"TypeScript")," will provide strong-typings for the consumers."),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"https://p42.f3.n0.cdn.getcloudapp.com/items/2NuBpGo7/Screen%20Recording%202020-03-20%20at%2003.08%20PM.gif?v=827421e292a75bf9fc33c511f4336abc",alt:"Type Inference"}))),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"mapFrom()")," will set the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/guides/basic-concept#mappingtransformation"}),"TransformationType")," to ",Object(o.b)("inlineCode",{parentName:"p"},"MapFrom"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const user = new User();\nuser.firstName = 'Chau';\nuser.lastName = 'Tran';\nuser.age = 28;\nuser.bio = 'Developer';\n\nconst vm = Mapper.map(user, UserVm);\n/**\n * UserVm {\n *   firstName: 'Chau',\n *   lastName: 'Tran',\n *   fullName: 'Chau Tran',\n *   age: 28,\n *   isAdult: true,\n *   bio: 'Developer'\n * }\n */\n")))}m.isMDXComponent=!0}}]);
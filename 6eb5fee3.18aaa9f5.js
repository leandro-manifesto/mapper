(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(6),o=(n(0),n(182)),i={id:"empty-value",title:"Handle Empty Value",sidebar_label:"Empty Value"},p={unversionedId:"usages/features/empty-value",id:"usages/features/empty-value",isDocsHomePage:!1,title:"Handle Empty Value",description:"By default, AutoMapper uses null value to map to empty values, or for when ignore() is used.",source:"@site/docs/usages/features/empty-value.md",slug:"/usages/features/empty-value",permalink:"/docs/next/usages/features/empty-value",editUrl:"https://github.com/nartc/mapper/edit/master/automapper-docusaurus/docs/usages/features/empty-value.md",version:"current",sidebar_label:"Empty Value",sidebar:"docs",previous:{title:"Naming Convention",permalink:"/docs/next/usages/features/naming-convention"},next:{title:"Handle Getters",permalink:"/docs/next/usages/features/getters"}},l=[],s={rightToc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"By default, ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," uses ",Object(o.b)("inlineCode",{parentName:"p"},"null")," value to map to empty values, or for when ",Object(o.b)("inlineCode",{parentName:"p"},"ignore()")," is used."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"Mapper.createMap(Source, Destination).forMember(d => d.foo, ignore());\n\nconst fooVm = Mapper.map(foo, Destination, Source);\n// fooVm.foo will be null\n")),Object(o.b)("p",null,"You might be wondering why ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," does not ",Object(o.b)("inlineCode",{parentName:"p"},"delete")," the property when ",Object(o.b)("inlineCode",{parentName:"p"},"source.<property>")," is ",Object(o.b)("strong",{parentName:"p"},"empty")," (",Object(o.b)("inlineCode",{parentName:"p"},"null")," or ",Object(o.b)("inlineCode",{parentName:"p"},"undefined"),") or\nwhen the property is ",Object(o.b)("inlineCode",{parentName:"p"},"ingore()"),". There are two main reasons:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"delete")," has issue with performance and also does not work quite well with ",Object(o.b)("strong",{parentName:"li"},"Prototype Chain")),Object(o.b)("li",{parentName:"ul"},'Deleting a property off of a model will "break" the model because now the mapped result is missing a property. ',Object(o.b)("inlineCode",{parentName:"li"},"AutoMapper")," does not\nwant to make this decision for the consumers.")),Object(o.b)("h4",{id:"problem-with-null"},"Problem with ",Object(o.b)("inlineCode",{parentName:"h4"},"null")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"null")," does signify that a property has been set with a value but that value is just ",Object(o.b)("strong",{parentName:"p"},"empty"),". However, ",Object(o.b)("inlineCode",{parentName:"p"},"null")," is kept after serialization which\ndoes bring up some problems with APIs that either expect a property with a value OR that property does not exist at all."),Object(o.b)("h4",{id:"solution"},"Solution"),Object(o.b)("p",null,"With that said, the solution that ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," provides is to set an option called ",Object(o.b)("inlineCode",{parentName:"p"},"useUndefined")," when you ",Object(o.b)("inlineCode",{parentName:"p"},"createMap()")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"console.log(JSON.stringify({foo: undefined}));\n// logs {}\nconsole.log(JSON.stringify({foo: null}));\n// logs {foo: null}\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"Mapper.createMap(Source, Destination, { useUndefined: true });\n")),Object(o.b)("p",null,"With ",Object(o.b)("inlineCode",{parentName:"p"},"useUndefined")," set to ",Object(o.b)("inlineCode",{parentName:"p"},"true"),", ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," will use ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," for empty values instead of ",Object(o.b)("inlineCode",{parentName:"p"},"null"),". ",Object(o.b)("inlineCode",{parentName:"p"},"undefined")," will allow\nserialization tool to ignore the property. Again, ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," uses ",Object(o.b)("inlineCode",{parentName:"p"},"null")," by default."),Object(o.b)("h4",{id:"global-settings"},"Global Settings"),Object(o.b)("p",null,"You can also set ",Object(o.b)("inlineCode",{parentName:"p"},"useUndefined")," on ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/next/usages/init/with-global-settings"}),"Global Settings"),". Setting ",Object(o.b)("inlineCode",{parentName:"p"},"useUndefined")," on ",Object(o.b)("strong",{parentName:"p"},"Global Level")," will\napply that setting to ALL Mappings."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("inlineCode",{parentName:"p"},"useUndefined")," on ",Object(o.b)("strong",{parentName:"p"},"Mapping Level")," will override the setting on ",Object(o.b)("strong",{parentName:"p"},"Global Level"))))}u.isMDXComponent=!0},182:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),u=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=u(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,m=c["".concat(i,".").concat(d)]||c[d]||b[d]||o;return n?r.a.createElement(m,p(p({ref:t},s),{},{components:n})):r.a.createElement(m,p({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);